// qEasyListSplitter - split list into columns

/* ********** original by:
 *  easyListSplitter 1.0.2 - jQuery Plugin
 *  written by Andrea Cima Serniotti  
 *  http://www.madeincima.eu
 *
 *  Copyright (c) 2010 Andrea Cima Serniotti (http://www.madeincima.eu)
 *  Dual licensed under the MIT (MIT-LICENSE.txt)
 *  and GPL (GPL-LICENSE.txt) licenses.
 * **********
 
  2012-may-15 carmela.santos@aspect.com
  Modifications:
  - Removed numbers for listcontainer class.  Change setting of listClass and containerClass.  Add "column" class to sublists.
  - Cleanup.  Take lengths of sublists into account.  Removed horizontal option.  Modified logic for how columns are populated.
  - Adjust number of items per bucket as each one is filled up.
  - Allow for multiple classes in listcontainer.
  -  Move items in previous bucket if current ended up too long.
 */
$.fn.qEasyListSplitter=function(a){var b={colNumber:2};this.each(function(){var c=$(this);var d=$.extend(b,a);var e=$(this).find("li").length;var f=Math.ceil(e/d.colNumber);var g=$(this).attr("class");var h=$(this).attr("class").split(" ")[0];for(i=0;i<=d.colNumber;i++){if(i==0){$(this).addClass("column listCol0").wrap('<div class="'+g+'"></div>')}else if($(this).is("ul")){$(this).parents("."+h).append('<ul class="column listCol'+i+'"></ul>')}else{$(this).parents("."+h).append('<ol class="column listCol'+i+'"></ol>')}$("."+h+" > ul,."+h+" > ol").removeClass(h)}var j,k;var l=1;var m=$(this).parents("."+h).find(".listCol"+l);$(this).children("li").each(function(){if($(m).find("li").length>=f){if(l>1){k=$(this).parents("."+h).find(".listCol"+(l-1));while($(m).find("li").length/$(k).find("li").length>1.1){$(k).append($(m).find("> li:first-child"))}}if($(m).find("li").length>=f&&l<d.colNumber){f=Math.ceil($(c).find("li").length/(d.colNumber-l));l++;m=$(this).parents("."+h).find(".listCol"+l)}}$(m).append(this)});$("."+h).find("ol,ul").each(function(){if($(this).children().size()==0){$(this).remove()}});$("."+h).find("ol:last,ul:last").addClass("last")})}